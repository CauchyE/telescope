name: Node.js CI

on: pull_request

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      angular-cosmoscan: ${{ steps.filter.outputs.angular-cosmoscan }}
      shared: ${{ steps.filter.outputs.shared }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            angular-cosmoscan:
              - 'projects/cosmoscan/**'
            firestore:
              - 'firestore/**'
            functions:
              - 'functions/**'
            shared:
              - 'shared/**'
  angular-cosmoscan:
    needs: filter
    if: ${{ needs.filter.outputs.angular-main == 'true' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
      - run: npm run build --if-present -- --project cosmoscan
      - run: npm run test -- --watch=false --browsers=ChromeHeadless --project cosmoscan
        env:
          CI: true
  shared:
    needs: filter
    if: ${{ needs.filter.outputs.shared == 'true' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
        working-directory: ./shared
      - run: npm run build --if-present
        working-directory: ./shared
      - run: npm run test
        working-directory: ./shared
